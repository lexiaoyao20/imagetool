name: Build and Release

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install libjpeg libpng libtiff webp little-cms2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile --add-data "config.json:." imagetool.py
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: imagetool-${{ matrix.platform }}
          path: dist/imagetool*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --generate-notes
      - uses: actions/download-artifact@v3
      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for artifact in imagetool-*/*; do
            gh release upload ${{ github.ref_name }} "$artifact"
          done

  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Check and format code
        run: |
          black --check .
      - name: Lint Python sources
        run: |
          flake8 . --config=.flake8 --exclude=.venv
      - name: Execute Python tests
        run: |
          python -m pytest tests
